{"version":3,"file":"main.js","mappings":"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","sources":["webpack://polygon-software/external \"electron\"","webpack://polygon-software/external \"electron-db\"","webpack://polygon-software/external \"fs\"","webpack://polygon-software/external \"path\"","webpack://polygon-software/external \"url\"","webpack://polygon-software/webpack/bootstrap","webpack://polygon-software/webpack/runtime/compat get default export","webpack://polygon-software/webpack/runtime/define property getters","webpack://polygon-software/webpack/runtime/hasOwnProperty shorthand","webpack://polygon-software/webpack/runtime/make namespace object","webpack://polygon-software/./src/main.js"],"sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"electron-db\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import path from \"path\";\nimport url from \"url\";\nimport { app, BrowserWindow, Menu, ipcMain, shell } from \"electron\";\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\";\n\n// set to false to stop the use of devtools\nvar devtools = true\n\nprocess.env[\"ELECTRON_DISABLE_SECURITY_WARNINGS\"] = \"true\";\n\nif (env.name == \"production\") {\n  let firefoxPath = path.join(\n    \".\",\n    \"resources\",\n    \"app.asar.unpacked\",\n    \"node_modules\",\n    \"playwright-firefox\",\n    \".local-browsers\"\n  );\n  process.env.PLAYWRIGHT_BROWSERS_PATH = firefoxPath;\n} else {\n  process.env.PLAYWRIGHT_BROWSERS_PATH = 0;\n}\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\");\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`);\n}\nconst db = require(\"electron-db\");\nconst fs = require(\"fs\");\nconst userDataPath = (\n  require(\"electron\").app || require(\"electron\").remote.app\n).getPath(\"userData\");\nconst dbPath = userDataPath + \"/db\";\n\napp.on(\"ready\", () => {\n  let mainWindow = new BrowserWindow({\n    width: 550,\n    height: 330,\n    minWidth: 550,\n    minHeight: 330,\n    resizable: false,\n    thickFrame: true,\n    frame: false,\n    webPreferences: {\n      nodeIntegration: true,\n      contextIsolation: false,\n      enableRemoteModule: true,\n      devTools: devtools \n    }, \n  });\n\n  if (fs.existsSync(`${dbPath}/User.json`)) {\n    db.getAll(`User`, dbPath, (succ, data) => {\n      if (succ) {\n        if (data.length > 0) {\n          mainWindow.setMinimumSize(1300, 700);\n          mainWindow.setSize(1300, 700);\n          mainWindow.center();\n\n          mainWindow.loadURL(\n            url.format({\n              pathname: path.join(__dirname, \"app.html\"),\n              protocol: \"file:\",\n              slashes: true,\n            })\n          );\n        } else {\n          mainWindow.loadURL(\n            url.format({\n              pathname: path.join(__dirname, \"login.html\"),\n              protocol: \"file:\",\n              slashes: true,\n            })\n          );\n        }\n      }\n    });\n  } else {\n    mainWindow.loadURL(\n      url.format({\n        pathname: path.join(__dirname, \"login.html\"),\n        protocol: \"file:\",\n        slashes: true,\n      })\n    );\n  }\n\n  mainWindow.on(\"close\", () => {\n    mainWindow = null;\n  });\n\n  ipcMain.on(\"changeSize\", async (event, height = 1300, width = 700) => {\n    mainWindow.setMinimumSize(height, width);\n    mainWindow.setSize(height, width);\n    mainWindow.center();\n\n    mainWindow.loadURL(\n      url.format({\n        pathname: path.join(__dirname, \"app.html\"),\n        protocol: \"file:\",\n        slashes: true,\n      })\n    );\n  });\n\n  ipcMain.on(\"logout\", async (event) => {\n    db.clearTable(`User`, dbPath, (succ, msg) => {\n      if (succ) {\n        mainWindow.loadURL(\n          url.format({\n            pathname: path.join(__dirname, \"login.html\"),\n            protocol: \"file:\",\n            slashes: true,\n          })\n        );\n\n        mainWindow.setMinimumSize(550, 330);\n        mainWindow.setSize(550, 330);\n        mainWindow.center();\n      }\n    });\n  });\n\n  if (env.name === \"development\") {\n    mainWindow.openDevTools();\n  }\n});\n\napp.on(\"window-all-closed\", () => {\n  app.quit();\n});\n"],"names":["path","url","app","BrowserWindow","Menu","ipcMain","shell","env","devtools","process","name","firefoxPath","join","PLAYWRIGHT_BROWSERS_PATH","userDataPath","getPath","setPath","db","require","fs","remote","dbPath","on","mainWindow","width","height","minWidth","minHeight","resizable","thickFrame","frame","webPreferences","nodeIntegration","contextIsolation","enableRemoteModule","devTools","existsSync","getAll","succ","data","length","setMinimumSize","setSize","center","loadURL","format","pathname","__dirname","protocol","slashes","event","clearTable","msg","openDevTools","quit"],"sourceRoot":""}